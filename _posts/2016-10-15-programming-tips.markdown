---
layout:     post
title:      "我的编程心得"
subtitle:   "——如何写得一手好代码"
date:       2016-10-15
author:     "WangWei"
header-img: "img/post-bg-programmingtips.jpg"
catalog: true
tags:
    - 技术
---


> 作为一名程序员，“活好——写得一手好代码”才是硬道理！

## 前言

**写出好代码是每个程序员的共同愿望，但是却鲜有人做到，因为没有具体的某个方法可供参考，包括本篇文章所讲也不是什么牛逼的方法，编程时间不长，所以这里主要是总结一下自己的一些编程心得，兴许对写出好代码有点作用吧！**

---

## 正文

### 心得一、良好的代码规范

做到前后代码风格一致是代码规范的基本要求，其次应该与业界主流的规范和团队的规范一致，没事的时候多看看开源项目中的代码以及同事的代码，应该会有很大的启发。

### 心得二、不要HardCode

HardCode其实就是你欠下的技术债，一旦修改起来就会要你的命，所以一定要走配置。

### 心得三、选择合适的数据结构

我们现在使用数据结构时，几乎都是无意识的随便弄，很少考虑应用场景这些东西，所以在某个场景下我们应该思考用什么数据结构比较合适，要有意识地培养这种习惯。

### 心得四、牢记面向对象思想及五大法则
1. 时刻牢记面向对象思想
2. 遵从五大法则
 * 单一职责原则
 * 开放封闭原则
 * 里氏替换原则
 * 依赖倒置原则
 * 接口隔离原则

### 心得五、面向接口的编程

总之多使用接口而不是继承，目的就是为了实现松耦合。
 
### 心得六、偶尔使用合适的设计模式

设计模式是很牛逼，但是这些年随着编程语言的进步，很多设计模式已不再适用，所以熟悉几个常用的设计模式即可，不必过分纠结。

### 心得七、选择合适的序列化器

首先做到整个项目使用同一个序列化器，其次应选择性能最好的序列化器。

### 心得八、善于使用AOP处理一些东西

在很多场景下，使用面向切面的编程可以很好的处理**一些前置的工作**，比如C#中的特性，以及Java中的注解都是AOP的应用。

### 心得九、尝试并行编程&异步编程

这是在语言层面提高性能的有力武器。

### 心得十、DB查询性能优化

很多时候DB的性能瓶颈都是由于查询语句引起的，所以应该重点排查DB查询语句，另外应多使用存储过程。

### 心得十一、良好的分层

分层的目的就是为了降低耦合度，每一层职责相对独立，也容易扩展和拆分系统。

### 心得十二、记日志

线上出了问题可以立马去查看日志，在短时间内解决问题；反之，则很难找到问题所在，迟迟解决不了线上问题，给领导造成能力差的印象。

### 心得十三、不要单点，要用集群

在有条件的情况下，不论大小应用都应该使用集群，不仅能够应对高并发，也可以保证高可用，同时还可以实现扩展性。

### 心得十四、不使用过重的框架

过重的框架往往使得应用的复杂度上升，同时降低了应用的性能。

### 心得十五、注意安全问题

对于安全问题，一定要重视，因为损失的直接是钱，这是老板最看重的，所以要时刻有这种意识在，提前处理好哪些安全隐患。

---

## 结语

**以上这些东西不需要记也不需要背，在编程时做到心中有数即可，慢慢养成习惯就好，不一定都用上，用好其中一二就能使你的代码质量有很大的改观！**
